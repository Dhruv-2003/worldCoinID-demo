import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import dynamic from "next/dynamic";
import { WidgetProps } from "@worldcoin/id";
import axios from "axios";
import { contract_ABI, contract_Address } from "@/constants/constants";
import { Contract, Wallet, ethers } from "ethers";
import { defaultAbiCoder as abi } from "@ethersproject/abi";

const WorldIDWidget = dynamic<WidgetProps>(
  () => import("@worldcoin/id").then((mod) => mod.WorldIDWidget),
  { ssr: false }
);

// --> Cloud Functions
/// verify the Proof by sending a request first and then Moving ahead.
const verifyProof = (verificationResponse: any) => {
  try {
    const config = {
      method: "post",
      url: "https://developer.worldcoin.org/api/v1/verify",
      headers: {
        "Content-Type": "application/json",
      },
      data: {
        merkle_root: verificationResponse.merkle_root,
        nullifier_hash: verificationResponse.nullifier_hash,
        action_id: "wid_staging_463a9bda2c5c73bf919d94bc59f7e92e",
        signal: "Verify Real users ",
        proof: verificationResponse.proof,
      },
    };
    axios(config)
      .then(function (response) {
        console.log(response);
        // if (response.success) {
        //   /// Move ahead if the Success is true
        // }
      })
      .catch(function (error) {
        console.log(error);
      });
  } catch (error) {
    console.log(error);
  }
};

// --> On Chain Verification
const verifyOnchain = async (worldIDProof: any) => {
  try {
    let wallet_Address = "";
    let PRIVATE_KEY = "";
    const signer = new Wallet(PRIVATE_KEY);
    const contract = new Contract(contract_Address, contract_ABI, signer);
    const verifyTx = await contract.verifyAndExecute(
      wallet_Address,
      worldIDProof.merkle_root,
      worldIDProof.nullifier_hash,
      abi.decode(["uint256[8]"], worldIDProof.proof)[0],
      { gasLimit: 10000000 }
    );

    await verifyTx.wait();
  } catch (error) {
    console.log(error);
  }
};

const widgetProps: WidgetProps = {
  actionId: "wid_staging_463a9bda2c5c73bf919d94bc59f7e92e",
  signal: "Verify Real users ",
  enableTelemetry: true,
  appName: "SwiftFi",
  signalDescription: "Verify that you are a real user to proceed",
  theme: "dark",
  debug: true, // Recommended **only** for development
  onSuccess: (verificationResponse) => console.log(verificationResponse),
  onError: ({ code, detail }) => console.log({ code, detail }),
  onInitSuccess: () => console.log("Init successful"),
  onInitError: (error) =>
    console.log("Error while initialization World ID", error),
};

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>WorldCoin ID Widget Demo App</p>
          <div>
            <WorldIDWidget {...widgetProps} />
          </div>
        </div>

        <div className={styles.center}>By @0xdhruva</div>
      </main>
    </>
  );
}
